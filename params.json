{"name":"Entity-manager","tagline":"","body":"# Entity Manager Documentation\r\nIn order to provide lookup, discovery and resolution services for physical and virtual entities ebbits offers the entity management functionalities via Entity Manager component. Beside the core functionality – i.e. to provide world-wide unique identifiers, Entity Manager also supports:\r\n* mapping to local identifiers that are used by different stakeholders, but identifies the same entity and \r\n* management of part-of relation between two entities – i.e. an entity could have one or more parts (slave entities) and at the same time it could be part of one or more entities (master). In order to be able traverse such relationships, the resolution part of the Entity Management service maintains an oriented acyclic graph structure.\r\n\r\nThe Entity Manager is implemented as a RESTful web service with the Ruby on Rails  framework and is deployed at Heroku  cloud application platform. At the [http://entity-manager.herokuapp.com/entities](http://entity-manager.herokuapp.com/entities) URL, there is also available a simple administration console. Authorisation system is simplified in a way that authenticated users via third-party authentication (Google, Linked-In) or just registered developers are able to access the system functionality. Not authenticated users can just view current contents of the Entity Manager. \r\n\r\n### Note:\r\nIn the following examples, the destination address depends on the deployment:\r\nIf deployed at Heroku, instead of\r\n[http://localhost:3000/](http://localhost:3000/) \r\nshould be used \r\n[http://entity-manager.herokuapp.com/](http://entity-manager.herokuapp.com/)\r\n\r\n## Entity Manager supports the following API:\r\n\r\n## `createIdentity( LocalID, Credentials): Entity`\r\nBased on local identifier, credentials identifying an owner (i.e. stakeholder in an IoT application) and entity’s description, the call creates new entity with world-wide unique identifier that is randomly generated.\r\n\r\n### `Parameters`\r\n_localID_  The local identifier of an entity.\r\n\r\n_description_ Basic textual description of registered entity.\r\n\r\n_credentials_ Data necessary for identification and authorisation of authority that is registering a new entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the successfully registered entity data element or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"localid=sensor1ab&owner=3&description=Some nice description.\" http://localhost:3000/entities.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entity>\r\n  <id type=\"integer\">15</id>\r\n  <uuid>e90dd88b-67bc-44a9-9eb9-22bbbef16d0d</uuid>\r\n  <description>Some nice description.</description>\r\n  <created-at type=\"datetime\">2013-03-23T07:49:38Z</created-at>\r\n  <updated-at type=\"datetime\">2013-03-23T07:49:38Z</updated-at>\r\n  <schema>urn:entityID:</schema>\r\n</entity>\r\n```\r\n\r\n## `addAliasToIdentity(EbbitsID, LocalID, name, description, Credentials):Boolean`\r\nAdds alias to an existing entity - restful operation using the entity ID given in DB.\r\n\r\n### `Parameters`\r\n_EbbitsID_  The ID given in DB of the entity, to which an alias is being added.\r\n\r\n_LocalID_ The local identifier of an entity.\r\n\r\n_name_ The local name of an entity.\r\n\r\n_description_ Basic textual description of registered alias.\r\n\r\n_credentials_ Data necessary for identification and authorization of authority that is registering a new alias for an entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the successfully registered alias data element or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"owner=3&localid=1abc&name=temperature1abc&description=temperature sensor in the kitchen\" http://localhost:3000/entities/12/local_identities.xml\r\n\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<local-identity>\r\n  <id type=\"integer\">80</id>\r\n  <localid>1abc</localid>\r\n  <name>temperature1abc</name>\r\n  <owner-id type=\"integer\">3</owner-id>\r\n  <description>temperature sensor in the kitchen</description>\r\n  <entity-id type=\"integer\">12</entity-id>\r\n  <created-at type=\"datetime\">2013-03-23T14:29:49Z</created-at>\r\n  <updated-at type=\"datetime\">2013-03-23T14:29:49Z</updated-at>\r\n</local-identity>\r\n\r\nor \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Local ID for selected entity already exists.</error>\r\n</hash>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found - can not create local alias.</error>\r\n</hash>\r\n```\r\n\r\n\r\n## `addAliasToIdentity( Entity_UUID, LocalID, name, description, Credentials): LocalID`\r\nAdds alias to an existing entity - restful operation using the uuid instead of id in the DB.\r\n\r\n### `Parameters`\r\n_Entity_UUID_  The unique identifier of the entity, to which an alias is being added.\r\n\r\n_localID_ The local identifier of an entity.\r\n\r\n_name_ The local name of an entity.\r\n\r\n_description_ Basic textual description of registered alias.\r\n\r\n_credentials_ Data necessary for identification and authorization of authority that is registering a new alias for an entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the successfully registered alias data element or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=bc573b60-1f52-4003-92b4-8863470b6119&localid=1abcd&owner=3&name=temperature1abcd&description=2nd temperature sesor in the kitchen\" http://localhost:3000/addAliasToIdentity.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<local-identity>\r\n  <id type=\"integer\">85</id>\r\n  <localid>1abcd</localid>\r\n  <name>temperature1abcd</name>\r\n  <owner-id type=\"integer\">3</owner-id>\r\n  <description>2nd temperature sesor in the kitchen</description>\r\n  <entity-id type=\"integer\">11</entity-id>\r\n  <created-at type=\"datetime\">2013-04-04T14:03:52Z</created-at>\r\n  <updated-at type=\"datetime\">2013-04-04T14:03:52Z</updated-at>\r\n</local-identity>\r\n\r\nor \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Local ID for selected entity already exists.</error>\r\n</hash>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Owner not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n## `getIdentityByAlias( LocalID, Credentials): Entity`\r\nGet entity by given alias and owner.\r\n\r\n### `Parameters`\r\n_localID_  The local identifier of an entity.\r\n\r\n_credentials_ Data necessary for identification and authorisation of authority that is registering a new entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of found entity data element or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"search_terms=1abc&owner=3\" http://localhost:3000/get_by_alias.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entity>\r\n  <id type=\"integer\">11</id>\r\n  <uuid>bc573b60-1f52-4003-92b4-8863470b6119</uuid>\r\n  <description>Sensor nr. 1</description>\r\n  <created-at type=\"datetime\">2013-02-27T14:57:27Z</created-at>\r\n  <updated-at type=\"datetime\">2013-02-27T14:57:27Z</updated-at>\r\n  <schema>urn:entityID:</schema>\r\n</entity>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n\r\nor \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Owner not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n\r\n## `getIdentity( Entity_UUID, Credentials): Entity`\r\nGet entity by given uuid and owner.\r\n\r\n### `Parameters`\r\n_Entity_UUID_  The unique identifier of the entity we are looking for.\r\n\r\n_credentials_ Data necessary for identification and authorization of authority that is looking for an entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of found entity data element or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=bc573b60-1f52-4003-92b4-8863470b6119&owner=3\" http://localhost:3000/getIdentity.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entity>\r\n  <id type=\"integer\">11</id>\r\n  <uuid>bc573b60-1f52-4003-92b4-8863470b6119</uuid>\r\n  <description>Sensor nr. 1</description>\r\n  <created-at type=\"datetime\">2013-02-27T14:57:27Z</created-at>\r\n  <updated-at type=\"datetime\">2013-02-27T14:57:27Z</updated-at>\r\n  <schema>urn:entityID:</schema>\r\n</entity>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n## `addRelation( UUID_master, UUID_slave, Credentials): Array of Entities (slaves)`\r\nAdd relationship \"slave\" (uniquely identified by UUID_slave) is part of \"master\" (uniquely identified by UUID_master) and returns array of all slaves for given master.\r\n\r\n### `Parameters`\r\n_UUID_master_  The unique identifier of the entity, to which an slave is being added.\r\n\r\n_UUID_slave_ The unique identifier of the entity, which will be in relation is-part-of with entity identified by UUID_master.\r\n\r\n_Credentials_ Data necessary for identification and authorization of authority that is registering a new relation.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all slaves for given master entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"master=e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432&slave=dcfb88fd-d3bf-492a-8c05-998659b47890&owner=3\" http://localhost:3000/addRelation.xml\r\n_and after that_\r\ncurl -d \"master=e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432&slave=2663254d-bc92-4ba7-8b8b-e946b6d59a59&owner=3\" http://localhost:3000/addRelation.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">3595</id>\r\n    <uuid>dcfb88fd-d3bf-492a-8c05-998659b47890</uuid>\r\n    <description>piece 1 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:24:44Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:07:34Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">3596</id>\r\n    <uuid>2663254d-bc92-4ba7-8b8b-e946b6d59a59</uuid>\r\n    <description>piece 2 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:25:03Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:58:00Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n## `getMasters( Entity_UUID, Credentials): Array of Entities`\r\nGetting array of entities, which are in the master relation to the by UUID given entity and the distance between entities in the graph defined by the relation is just one (i.e. parent entities).\r\n\r\n### `Parameters`\r\n_Entity_UUID_ The unique identifier of the entity, which is part-of entities we are looking for (i.e. its masters).\r\n\r\n_Credentials_ Data necessary for identification and authorization of authority that is searching for masters of given entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all masters for given slave entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=dcfb88fd-d3bf-492a-8c05-998659b47890&owner=3\" http://localhost:3000/getMasters.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">2787</id>\r\n    <uuid>e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432</uuid>\r\n    <description>Date(1003528800000):LIM:75:false</description>\r\n    <created-at type=\"datetime\">2013-04-13T09:37:16Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T09:37:16Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n## `getSlaves( Entity_UUID, Credentials): Array of Entities`\r\nGetting array of entities, which are in the slave relation to the by UUID given entity and the distance between entities in the graph defined by the relation is just one (i.e. child entities).\r\n\r\n### `Parameters`\r\n_Entity_UUID_ The unique identifier of the entity, which is master of all entities we are looking for (i.e. its slaves).\r\n\r\n_Credentials_ Data necessary for identification and authorisation of authority that is searching for slaves of given entity.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all slaves for given master entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432&owner=3\" http://localhost:3000/getSlaves.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">3595</id>\r\n    <uuid>dcfb88fd-d3bf-492a-8c05-998659b47890</uuid>\r\n    <description>piece 1 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:24:44Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:07:34Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">3596</id>\r\n    <uuid>2663254d-bc92-4ba7-8b8b-e946b6d59a59</uuid>\r\n    <description>piece 2 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:25:03Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:58:00Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n\r\n## `removeRelation( UUID_master, UUID_slave, Credentials): Array of Entities (slaves)`\r\nRemove relationship \"slave\" is part of \"master\" and returns array of all slaves for given master.\r\n\r\n### `Parameters`\r\n_UUID_master_ The unique identifier of the entity, which is master part of the relation to be removed.\r\n\r\n_UUID_slave_ The unique identifier of the entity, which is slave part of the relation to be removed.\r\n\r\n_Credentials_ Data necessary for identification and authorisation of authority that is removing the existing relation.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all slaves for given master entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\nFIRST addRelation:\r\ncurl -d \"master=e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432&slave=2663254d-bc92-4ba7-8b8b-e946b6d59a59&owner=3\" http://localhost:3000/addRelation.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">3595</id>\r\n    <uuid>dcfb88fd-d3bf-492a-8c05-998659b47890</uuid>\r\n    <description>piece 1 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:24:44Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:07:34Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">3596</id>\r\n    <uuid>2663254d-bc92-4ba7-8b8b-e946b6d59a59</uuid>\r\n    <description>piece 2 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:25:03Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:58:00Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nTHEN:\r\ncurl -d \"master=e15f9dbc-1f7d-4b2a-85c0-6e613a2a6432&slave=2663254d-bc92-4ba7-8b8b-e946b6d59a59&owner=3\" http://localhost:3000/removeRelation.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">3595</id>\r\n    <uuid>dcfb88fd-d3bf-492a-8c05-998659b47890</uuid>\r\n    <description>piece 1 for addRelation testing</description>\r\n    <created-at type=\"datetime\">2013-04-13T10:24:44Z</created-at>\r\n    <updated-at type=\"datetime\">2013-04-13T11:07:34Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n\r\n\r\n\r\n## `getAllMasters(UUID, Credentials, range): Array of Entities`\r\nGetting array of entities, which are in the master position to the given entity by UUID - either direct (range == 1) or indirect (range > 1).\r\n\r\n### `Parameters`\r\n_Entity_UUID_ The unique identifier of the entity, which is part-of entities we are looking for (i.e. its masters).\r\n\r\n_Credentials_ Data necessary for identification and authorization of authority that is searching for masters of given entity.\r\n\r\n_range_ If the range is -1, the method will find all the predecessors of the entity regardless, of the graph depth. If range is > 0, it defines how many predecessor levels will be searched for.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all masters for given slave entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=a195d2e5-8939-4736-b119-264181baa62f&range=-1&owner=3\" http://localhost:3000/getAllMasters.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">7</id>\r\n    <uuid>62b6250d-3046-4152-9530-734d25480d26</uuid>\r\n    <description>description for entity 62b6250d-3046-4152-9530-734d25480d26</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">10</id>\r\n    <uuid>56ad9235-a166-4bd2-b7b7-af7a3f5d86d5</uuid>\r\n    <description>description for entity 56ad9235-a166-4bd2-b7b7-af7a3f5d86d5</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">12</id>\r\n    <uuid>c04d1fec-2e1c-40fe-837a-e83c89dafdcb</uuid>\r\n    <description>entita pre pokus2</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:34:27Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:34:27Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">11</id>\r\n    <uuid>97e6572a-9648-4e3f-98ac-ddab41b93a72</uuid>\r\n    <description>entita pre pokus1</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:57Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:57Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">9</id>\r\n    <uuid>0b0b2dee-4440-46af-9b22-0419be75a932</uuid>\r\n    <description>description for entity 0b0b2dee-4440-46af-9b22-0419be75a932</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\n\r\nor \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<nil-classes type=\"array\"/>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```\r\n\r\n## `getAllSlaves(UUID, Credentials, range): Array of Entities`\r\nGetting array of entities, which are in the child position to the given entity by UUID - either direct (range == 1) or indirect (range > 1).\r\n\r\n### `Parameters`\r\n_UUID_ The unique identifier of the entity, which is master of all entities we are looking for (i.e. its slaves).\r\n\r\n_Credentials_ Data necessary for identification and authorization of authority that is searching for slaves of given entity.\r\n\r\n_range_ If the range is -1, the method will find all the children of the entity regardless of the graph depth. If range is > 0, defines how many descendant levels will be searched for.\r\n\r\n### `Returns`\r\nThe function returns XML serialization of the array of all slaves for given master entity in case of success or error message in case of failure.\r\n\r\n### `Example of the request and result`\r\n```\r\ncurl -d \"uuid=c04d1fec-2e1c-40fe-837a-e83c89dafdcb&range=-1&owner=3\" http://localhost:3000/getAllSlaves.xml\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entities type=\"array\">\r\n  <entity>\r\n    <id type=\"integer\">7</id>\r\n    <uuid>62b6250d-3046-4152-9530-734d25480d26</uuid>\r\n    <description>description for entity 62b6250d-3046-4152-9530-734d25480d26</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">10</id>\r\n    <uuid>56ad9235-a166-4bd2-b7b7-af7a3f5d86d5</uuid>\r\n    <description>description for entity 56ad9235-a166-4bd2-b7b7-af7a3f5d86d5</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">12</id>\r\n    <uuid>c04d1fec-2e1c-40fe-837a-e83c89dafdcb</uuid>\r\n    <description>entita pre pokus2</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:34:27Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:34:27Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">11</id>\r\n    <uuid>97e6572a-9648-4e3f-98ac-ddab41b93a72</uuid>\r\n    <description>entita pre pokus1</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:57Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:57Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n  <entity>\r\n    <id type=\"integer\">9</id>\r\n    <uuid>0b0b2dee-4440-46af-9b22-0419be75a932</uuid>\r\n    <description>description for entity 0b0b2dee-4440-46af-9b22-0419be75a932</description>\r\n    <created-at type=\"datetime\">2014-12-29T12:32:06Z</created-at>\r\n    <updated-at type=\"datetime\">2014-12-29T12:32:06Z</updated-at>\r\n    <schema>urn:entityID:</schema>\r\n  </entity>\r\n</entities>\r\n\r\nor \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<nil-classes type=\"array\"/>\r\n\r\nor\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<hash>\r\n  <error>Entity not found.</error>\r\n</hash>\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}